scss:
  - variable: Sass uses the $ symbol to make something a variable. 
Ex: $primary-color: #333;
  
  - nesting: Sass will let you nest your CSS selectors in a way that follows the same visual hierarchy of your HTML. 
Ex: nav {
  ul {
    margin: 0;
    padding: 0;
    list-style: none;
  }
}
  - partials: A partial is simply a Sass file named with a leading underscore. You might name it something like _partial.scss. Sass partials are used with the @import directive.
  
  - import:  Sass builds on top of the current CSS @import but instead of requiring an HTTP request, Sass will take the file that you want to import and combine it with the file you're importing into so you can serve a single CSS file to the web browser.
  
  - mixins: A mixin lets you make groups of CSS declarations that you want to reuse throughout your site.

  - inheritance: This is one of the most useful features of Sass. Using @extend lets you share a set of CSS properties from one selector to another. It helps keep your Sass very DRY.

  - operator: Doing math in your CSS is very helpful. Sass has a handful of standard math operators like +, -, *, /, and %
